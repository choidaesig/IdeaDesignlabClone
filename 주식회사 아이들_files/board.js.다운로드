/**
 * 게시판관련 자바스크립트
 */

//중복해서 submit하는것 방지
formSubmit.isSubmit = false;
function formSubmit() {
  if (!formSubmit.isSubmit) {
    formSubmit.isSubmit = true;
    document.getElementById("form").submit();
  } else {
    alert("잠시만 기다려주세요.");
  }
}

// 파일삭제의 체크가 해제될경우 해당 input[type=file]의 값을 초기화
[].forEach.call(document.querySelectorAll("input[id^=delete_file_]"), function(
  obj
) {
  obj.addEventListener("change", function(e) {
    if (!e.target.checked) {
      document.getElementById("file_" + e.target.value).value = "";
    }
  });
});

jQuery(document).ready(function() {
  /**
   * 첨부파일이 추가되었을때 이벤트
   */
  jQuery("#attach-file-list").on("change", "[type=file]", function() {
    // 파일사이즈 관련
    var label = jQuery("[for=" + jQuery(this).attr("id") + "]");
    label.empty();
    var target = jQuery(this);
    if (target[0].files.length > 0) {
      var size = target[0].files[0].size;
      // 파일사이즈확인
      if (check_file_upload.check_file_size(size)) {
        label.append(check_file_upload.file_size_message(size));
        // 새 input[type=file]추가
        add_new_typefile();
      } else {
        // 알림, 첨부파일 비우기
        target.val("");
        var message_total_max_size = check_file_upload.file_size_message(
          check_file_upload.check_total_max_size * 1024
        );
        alert(check_file_upload.file_size_over_text);
      }
    }
  });

  jQuery("#attach-file-list").on("click", ".remove", function() {
    if (confirm("파일을 제거하시겠습니까?")) {
      jQuery("#" + jQuery(this).data("target")).val("");
    }
  });
});
/**
 * 추가할 수 있는 type=file을 자동으로 추가
 */
add_new_typefile.format = function(fileid) {
  return (
    '<li class="collection-item"><input type="file" id="attach_files_' +
    fileid +
    '"> <label for="attach_files_' +
    fileid +
    '"></label> <span class="remove" data-target="attach_files_' +
    fileid +
    '">제거</span></li>'
  );
};
function add_new_typefile() {
  var files = jQuery("[type=file]").toArray();
  if (files.length <= add_new_typefile.limit) {
    var is_full = true;
    for (var i in files) {
      if (!(files[i] && files[i].files[0] && files[i].files[0].size > 0)) {
        is_full = false;
      }
    }
    if (is_full) {
      var fileid = files[files.length - 1].id.replace("attach_files_", "") - 0;
      jQuery("#attach-file-list").append(add_new_typefile.format(fileid + 1));
    }
  }
}

// 첨부파일 갯수
check_file_upload.target_file_length = 0;

// kb단위. MB단위사용을 위해서는 x * 1024 형식으로 사용
check_file_upload.max_file_size = 20 * 1024;

// false는 체크하지않음, 숫자는 체크함. 미구현상태로 계속 false로 진행
check_file_upload.total_max_size = false;

// filesize메세지 출력
check_file_upload.file_size_message = function(size) {
  size = size / 1024;
  if (size < 1024) {
    return size.toFixed(2) + " " + "KB";
  } else {
    return (size / 1024).toFixed(2) + " " + "MB";
  }
};

// 파일사이즈 체크
// 크기번화없이 file에 있는  size 그대로 파라메터로 넘겨주면된다.
// 하용사이즈 내 true 이외 false
check_file_upload.check_file_size = function(size) {
  return size / 1024 < check_file_upload.max_file_size;
};
check_file_upload.file_size_over_text =
  "첨부파일의 크기는 " +
  check_file_upload.file_size_message(check_file_upload.max_file_size * 1024) +
  "까지입니다.";
check_file_upload.total_file_size_over_text =
  "첨부파일의 총 크기는 " +
  check_file_upload.file_size_message(
    check_file_upload.check_total_max_size * 1024
  ) +
  "까지입니다.";

// 총사이즈 체크
check_file_upload.check_total_max_size = function(total_size) {
  if (isNaN(check_file_upload.total_max_size)) {
    // kb/mb 사이즈변환
    alert(check_file_upload.total_file_size_over_text);
    return check_file_upload.total_max_size < total_size;
  } else {
    return true;
  }
};

/**
 * bool값을통해 disabled값이 변경됨
 * files가 form submit할때 함께 file이전송되지않도록 disabled
 * 이외에 파일전송시 실패했을때는 disabled를 다시 해제
 */
check_file_upload.disable_input_file = function(bool) {
  var files = jQuery("[type=file]").toArray();
  for (var i in files) {
    files.disabled = bool;
  }
};
/**
 * 파일업로드가 가능할경우
 * 파일업로드의 사이즈체크, 가능한 파일이 있는지 확인한다
 * return true => 파일업로드 가능한 파일이 없음, submit진행
 * return false=> 파일업로드 진행해야함. submit 중지
 */
function check_file_upload() {
  file_upload.target_files = [];

  var files = jQuery("[type=file]").toArray();
  var total_filesize = 0;
  var oversize = false;
  for (var i in files) {
    if (files[i].files.length > 0) {
      if (check_file_upload.check_file_size(files[i].files[0].size)) {
        check_file_upload.target_file_length++;
        file_upload.target_files.push(files[i].files[0]);

        total_filesize += files[i].files[0].size / 1024;
        var result = check_file_upload.check_total_max_size(total_filesize);
        if (!result) {
          oversize = true;
          break;
        }
      } else {
        alert(check_file_upload.file_size_over_text);
        oversize = true;
        break;
      }
    }
  }
  if (oversize) {
    return false;
  } else if (file_upload.target_files.length < 1) {
    return true;
  } else {
    check_file_upload.disable_input_file(true);
    file_upload();
    return false;
  }
}

file_upload.target_files = [];
function file_upload() {
  jQuery(".modal").show();
  send_file();
}

function send_file() {
  if (file_upload.target_files.length < 1) {
    formSubmit();
  } else {
    var fileData = new FormData();
    fileData.append("file", file_upload.target_files.pop());
    jQuery.ajax({
      url: send_file.file_upload_url,
      type: "POST",
      data: fileData,
      async: false,
      cache: false,
      contentType: false,
      processData: false,
      dataType: "json",
      success: function(res) {
        if (res.status) {
          send_file();
        } else {
          jQuery(".modal").hide();
          check_file_upload.disable_input_file(false);
          alert(res.message);
          formSubmit.isSubmit = false;
        }
      },
      error: function(res) {
        jQuery(".modal").hide();
        check_file_upload.disable_input_file(false);
        alert("파일을 업로드할 수 없습니다. 잠시 후 다시시도해주세요");
        formSubmit.isSubmit = false;
      }
    });
  }
}
